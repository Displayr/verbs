% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/average.R, R/averagecolumns.R, R/averagerows.R
\name{Average}
\alias{Average}
\alias{AverageColumns}
\alias{AverageRows}
\title{General-Purpose Averaging functions}
\usage{
Average(
  ...,
  remove.missing = TRUE,
  remove.rows = NULL,
  remove.columns = NULL,
  match.rows = "Yes",
  match.columns = "Yes",
  subset = NULL,
  weights = NULL,
  warn = FALSE
)

AverageColumns(
  ...,
  remove.missing = TRUE,
  remove.rows = c("NET", "SUM", "Total"),
  subset = NULL,
  weights = NULL,
  warn = FALSE
)

AverageRows(
  ...,
  remove.missing = TRUE,
  remove.columns = c("NET", "SUM", "Total"),
  warn = FALSE
)
}
\arguments{
\item{...}{Objects to be averaged; e.g. vectors, matrices, Variables, VariableSets or Q Tables.}

\item{remove.missing}{Logical element controlling whether missing values should be
removed in calculations? Defaults to \code{TRUE}. If set to \code{FALSE} and if one of
input elements contains missing values, then the resulting computed sum will also be
\code{NA}.}

\item{remove.rows}{The labels of named vectors, or, rows of tables and similar
structures to be removed from the row dimension of the input. Any row elements
with the labels specified here will not be included in the resulting \code{Sum}
calculation.}

\item{remove.columns}{The labels of columns of tables and similar
structures to be removed from the column dimension of the input. Any column elements
with the labels specified here will not be included in the resulting \code{Sum}
calculation.}

\item{subset}{Logical vector of units to use in the calculation. Only applied to variables and
not to Q Tables that contain statistics since the original variable data is unavailable.}

\item{weights}{Numeric vector of weights to use in the calculation. It is required to have the same
number of elements as there are rows in the inputs as the weight vector is applied across the row
dimension (elements in different columns but the same row will have the same weight element applied). The
exception to this is that weights will not be applied to Q Tables containing statistics since
the original variable data is unavailable.}

\item{warn}{Logical element to control whether warnings are shown when non-obvious
operations are performed (e.g., removing rows, removing missing values when they are present).
Possible warnings presented include \itemize{
  \item Whether missing values were identified and removed if \code{remove.missing}
    is set to \code{TRUE}
  \item Whether different statistics are being summed in the case of Q Table.
  \item Whether unmatched rows or columns have been removed from the calculation if the user
  has specified for unmatched elements to be hidden.
  \item Whether any inputs have been reshaped.
}}
}
\value{
The \code{Average} function returns the arithmetic mean of all the elements provided in the input,
  possibly after the elements have had entries removed, filtered out or weighted using the provided
  options.

In a similar way, \code{AverageColumns} is a generalization of \code{\link{colMeans}} supporting
 row removal and the application of filters and weights before calculation but not supporting row or column matching for multiple inputs.

The \code{AverageRows} function returns the arithmetic mean of all the elements in each row
  index provided in the input, possibly after the elements have been pre-processed similar
  to \code{Average}.
}
\description{
\code{Average} is a generalization of the arithmetic \code{\link{mean}} function
 but supporting additional pre-processing and matching of data before calculation
 by utilizing the \code{\link{Sum}} function to compute the numerator.

Also, \code{AverageRows} is a generalization of \code{\link{rowMeans}} supporting
 column removal before calculation but not supporting filters, weights and row or column matching
 for multiple inputs.
}
\details{
For \code{Average}, if a single input element is provided, then the output is computed in the same
  way as \code{\link{mean}}, i.e. all elements added together and divided by the number of inputs
  to give a single scalar value.
  If multiple input elements are provided, then the numerator is computed in the same way as \code{\link{Sum}}. That is,
  then element-wise addition is performed using the + function in \code{\link{Arithmetic}}.
  In the case of multiple inputs, the dimensions need to match before elementwise
  addition can occur. i.e. if the first element is a 3 x 2 matrix, then the second element needs to be
  a matrix of the same dimension. Partial dimension matching is also supported, so if an n x p matrix is
  used as the first input, then the second input could be an n x 1 column vector that is reshaped to an
  n x p matrix before calculation.

  If weights are provided, they are applied across the row dimension to the input elements. If there is a single input
  with multiple elements, then the weights in the denominator are computed accounting for the missingness of the
  elements. That is, the weight element will be omitted from the calculation if the input element is missing.
  Furthermore, if multiple inputs are provided, then any weights provided will be ignored since all elements in the
  element-wise mean computation will have the same weight and the weights are redundant.

For \code{AverageRows} the average is computed within the row dimension of the input.
 E.g. a n x p matrix supplied to \code{Average} will produce a vector of of length \code{n}.
 If names are provided in the row dimension of the input then the output will have the same
 row names.
}
\examples{
# Examples using average
Average(1:6)
mean(1:6)
input.matrix <- matrix(runif(6), nrow = 3, dimnames = list(letters[1:3], c("Q1", "Q2")))
mean(input.matrix)
Average(input.matrix)
Average(1:6, 1:6)
((1:6) + (1:6))/2
x <- 1:6
y <- sample(1:6)
y
Average(x, y)
(x + y)/2
is.na(y) <- 3
is.na(x) <- 3:4
Average(x, y)
x <- matrix(1:12, nrow = 4, ncol = 3, dimnames = list(letters[1:4], LETTERS[1:3]))
y <- matrix(1:20, nrow = 5, ncol = 4, dimnames = list(letters[1:5], LETTERS[1:4]))
Average(x, y, remove.rows = "e", remove.columns = "D")
x <- matrix(1:12, nrow = 4, ncol = 3, dimnames = list(letters[1:4], letters[1:3]))
y <- matrix(1:20, nrow = 5, ncol = 4, dimnames = list(LETTERS[1:5], LETTERS[1:4]))
Average(x, y, match.rows = "Yes", match.columns = "Yes")
Average(x, y, match.rows = "Fuzzy", match.columns = "Fuzzy")
# Examples using SumColumns
input.matrix <- matrix(1:8, nrow = 4)
AverageColumns(input.matrix) #= c(10, 26)
named.matrix <- input.matrix
dimnames(named.matrix) <- list(LETTERS[1:4], letters[1:2])
AverageColumns(named.matrix)
AverageColumns(named.matrix, remove.rows = c("A", "C"))
AverageColumns(named.matrix, subset = c(TRUE, FALSE, TRUE, FALSE))
AverageColumns(named.matrix, remove.rows = c("B", "D"))
# Each element is summed individually
# The order of input determines the order of output.
w <- c(a = 1, b = 2, c = 3, d = 4)
x <- c(a = 1, b = 2)
y <- c(b = 3, c = 10)
z <- c(c = -1, d = 3)
AverageColumns(w, x, y, z)
AverageColumns(z, y, x, w)
AverageColumns(sample(w), sample(x), sample(y), sample(z))
# Examples using AverageRows
input.matrix <- matrix(runif(6), nrow = 3, dimnames = list(letters[1:3], c("Q1", "Q2")))
AverageRows(input.matrix)
input.matrix.with.total <- cbind(input.matrix, "Total" = rowSums(input.matrix))
AverageRows(input.matrix.with.total) # The total column is removed by default
colnames(input.matrix.with.total) <- c("Q1", "Q2", "tot")
# This will include the total in the calculation since the non-standard Total label is used.
AverageRows(input.matrix.with.total)
AverageRows(input.matrix.with.total, remove.columns = "tot")
v3 <- matrix(runif(3), nrow = 3, dimnames = list(letters[1:3], "Q3"))
AverageRows(input.matrix, v3)
input.df <- data.frame(V1 = runif(3), V2 = runif(3))
AverageRows(input.matrix, input.df)
}
